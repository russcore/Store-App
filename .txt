this is my application, i have issue with store new product type , i want to add new table inside my database to store product type 
and to use it for product type 
because on current way after reset server all new types disappear
and i want to do option to edit product as well 
and i need option if i add new product to show exist picture to not create new one 
generate full code with all changes 

 
app.py 
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

from flask import Flask, render_template, redirect, url_for, request, jsonify
from config import Config
from flask_sqlalchemy import SQLAlchemy
from flask_wtf import FlaskForm
from flask_uploads import UploadSet, configure_uploads, IMAGES
from werkzeug.utils import secure_filename
from forms import ProductForm
from models import db, Product

app = Flask(__name__)
app.config.from_object(Config)
db.init_app(app)

photos = UploadSet('photos', IMAGES)
configure_uploads(app, photos)

# Sample initial product types
product_types = ['Vegetables', 'Fruits']

@app.route('/')
def index():
    filter_type = request.args.get('filter_type', type=str)
    if filter_type:
        products = Product.query.filter_by(type=filter_type).all()
    else:
        products = Product.query.all()
    return render_template('index.html', products=products, product_types=product_types)


@app.route('/add_product', methods=['GET', 'POST'])
def add_product():
    form = ProductForm()

    # Populate the existing types from the global product_types list
    form.existing_type.choices = [(ptype, ptype) for ptype in product_types]

    if form.validate_on_submit():
        # Determine the type of the product
        product_type = form.new_type.data if form.new_type.data else form.existing_type.data

        # Save the uploaded image
        filename = photos.save(form.image.data)

        # Create a new product
        product = Product(
            name=form.name.data,
            count=form.count.data,
            expired_date=form.expired_date.data,
            location=form.location.data,
            image=filename,
            type=product_type
        )

        # Add to the database session
        db.session.add(product)
        db.session.commit()

        # Update product_types list with new type if not already in the list
        if product_type not in product_types:
            product_types.append(product_type)

        return redirect(url_for('index'))

    return render_template('add_product.html', form=form, product_types=product_types)


@app.route('/get_product_types', methods=['GET'])
def get_product_types():
    return jsonify(product_types)

@app.route('/remove_product/<int:product_id>', methods=['GET', 'POST'])
def remove_product(product_id):
    product = Product.query.get_or_404(product_id)
    if request.method == 'POST':
        db.session.delete(product)
        db.session.commit()
        return redirect(url_for('index'))
    return render_template('remove_product.html', product=product)

@app.route('/update_count/<int:product_id>/<action>', methods=['POST'])
def update_count(product_id, action):
    product = Product.query.get_or_404(product_id)
    if action == 'add':
        product.count += 1
    elif action == 'subtract':
        product.count -= 1
    db.session.commit()
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
config.py
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

import os

basedir = os.path.abspath(os.path.dirname(__file__))

class Config:
    SECRET_KEY = os.environ.get('SECRET_KEY') or 'you-will-never-guess'
    SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(basedir, 'app.db')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    UPLOADED_PHOTOS_DEST = os.path.join(basedir, 'static/uploads')
    MAX_CONTENT_LENGTH = 16 * 1024 * 1024  # 16MB max file size

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
forms.py
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
from flask_wtf import FlaskForm
from wtforms import StringField, IntegerField, DateField, FileField, SelectField
from wtforms.validators import DataRequired, Optional

class ProductForm(FlaskForm):
    name = StringField('Name', validators=[DataRequired()])
    count = IntegerField('Count', validators=[DataRequired()])
    expired_date = DateField('Expired Date', validators=[DataRequired()])
    location = StringField('Location', validators=[DataRequired()])
    existing_type = SelectField('Existing Type', validators=[Optional()])
    new_type = StringField('New Type', validators=[Optional()])
    image = FileField('Product Image', validators=[DataRequired()])

class ProductTypeForm(FlaskForm):
    existing_type = SelectField('Existing Type', validators=[Optional()])
    new_type = StringField('New Type', validators=[Optional()])
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
init.py
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
from app import db
db.create_all()
exit()
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
models.py
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

class Product(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(64), index=True, unique=True)
    count = db.Column(db.Integer)
    expired_date = db.Column(db.Date)
    location = db.Column(db.String(120))
    type = db.Column(db.String(120))
    image = db.Column(db.String(120))

class Product_type(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    type = db.Column(db.String(120))
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
add_products.html
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Fetch existing product types dynamically
            $.getJSON("/get_product_types", function (data) {
                let existingTypeSelect = $("#existing_type");
                existingTypeSelect.empty();
                $.each(data, function (index, value) {
                    existingTypeSelect.append($('<option>', {
                        value: value,
                        text: value
                    }));
                });
            });

            // Form submission handler
            $("#productForm").submit(function (event) {
                let newType = $("#new_type").val();
                if (newType) {
                    $("#existing_type").prop('disabled', true);
                }
            });
        });
    </script>
    <style>
        .form-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #f9f9f9;
        }
        .form-header {
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="form-container">
            <h1 class="form-header">Add Product</h1>
            <form id="productForm" method="POST" enctype="multipart/form-data">
                {{ form.hidden_tag() }}
                <div class="mb-3">
                    {{ form.name.label(class="form-label") }}
                    {{ form.name(class="form-control", size=32) }}
                </div>
                <div class="mb-3">
                    {{ form.count.label(class="form-label") }}
                    {{ form.count(class="form-control", size=32) }}
                </div>
                <div class="mb-3">
                    {{ form.expired_date.label(class="form-label") }}
                    {{ form.expired_date(class="form-control", size=32) }}
                </div>
                <div class="mb-3">
                    {{ form.location.label(class="form-label") }}
                    {{ form.location(class="form-control", size=32) }}
                </div>
                <div class="mb-3">
                    {{ form.existing_type.label(class="form-label") }}
                    {{ form.existing_type(class="form-control", id="existing_type") }}
                </div>
                <div class="mb-3">
                    {{ form.new_type.label(class="form-label") }}
                    {{ form.new_type(class="form-control", size=32, id="new_type") }}
                </div>
                <div class="mb-3">
                    {{ form.image.label(class="form-label") }}
                    {{ form.image(class="form-control") }}
                </div>
                <button type="submit" class="btn btn-primary w-100">Add Product</button>
            </form>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
base.html
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Inventory</title>
</head>
<body>
    <div class="container">
        {% block content %}{% endblock %}
    </div>
</body>
</html>

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
index.html
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .product-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
        }
        .table-actions {
            display: flex;
            gap: 10px;
        }
        .scrollmenu {
            overflow: auto;
            white-space: nowrap;
            margin-bottom: 20px;
        }
        .scrollmenu a {
            display: inline-block;
            padding: 14px;
            text-decoration: none;
            margin: 5px;
            background-color: #f1f1f1;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1 class="mb-4">Product List</h1>

        <form method="GET" class="mb-4">
            <div class="row g-3">
                <div class="col-auto">
                    <label for="filter_type" class="form-label">Filter by Type:</label>
                </div>
                <div class="col-auto">
                    <select name="filter_type" id="filter_type" class="form-select">
                        <option value="">All</option>
                        {% for type in product_types %}
                        <option value="{{ type }}">{{ type }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">Filter</button>
                </div>
            </div>
        </form>

        <div class="scrollmenu">
            <a href="{{ url_for('add_product') }}" class="btn btn-success">Add New Product</a>
        </div>

        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Count</th>
                    <th>Expired Date</th>
                    <th>Location</th>
                    <th>Type</th>
                    <th>Image</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for product in products %}
                <tr>
                    <td>{{ product.name }}</td>
                    <td>{{ product.count }}</td>
                    <td>{{ product.expired_date }}</td>
                    <td>{{ product.location }}</td>
                    <td>{{ product.type }}</td>
                    <td><img src="{{ url_for('static', filename='uploads/' ~ product.image) }}" class="product-image"></td>
                    <td class="table-actions">
                        <a href="{{ url_for('remove_product', product_id=product.id) }}" class="btn btn-danger">Remove</a>
                        <form method="POST" action="{{ url_for('update_count', product_id=product.id, action='add') }}" class="d-inline">
                            <button type="submit" class="btn btn-secondary">+1</button>
                        </form>
                        <form method="POST" action="{{ url_for('update_count', product_id=product.id, action='subtract') }}" class="d-inline">
                            <button type="submit" class="btn btn-secondary">-1</button>
                        </form>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
remove_product.html
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Remove Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="path/to/styles.css">
</head>
<body>
    <div class="container mt-5">
        <div class="card">
            <div class="card-body">
                <h1 class="card-title">Remove Product</h1>
                <p class="card-text">Are you sure you want to remove "{{ product.name }}"?</p>
                <form method="POST">
                    <button type="submit" class="btn btn-danger">Remove</button>
                    <a href="{{ url_for('index') }}" class="btn btn-secondary">Cancel</a>
                </form>
            </div>
        </div>
    </div>
</body>
</html>

